<!--
   Copyright (c) 2010 BSI Business Systems Integration AG.
   All rights reserved. This program and the accompanying materials
   are made available under the terms of the Eclipse Public License v1.0
   which accompanies this distribution, and is available at
   http://www.eclipse.org/legal/epl-v10.html

   Contributors:
       BSI Business Systems Integration AG - initial API and implementation
 -->

<project name="scout.releng" default="build">
	<property environment="env" />
	<property file="build.properties" />
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="${buildFileDir}/lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<tstamp>
		<format property="buildTimestamp" pattern="yyyyMMdd-hhmm" />
		<format property="featureTimestamp" pattern="yyyyMMddhhmm" />
	</tstamp>

	<!-- condition properties -->
	<condition property="major" value="${versionMajor}">
		<isset property="versionMajor" />
	</condition>
	<property name="major" value="" />

	<condition property="minor" value=".${versionMinor}">
		<and>
			<isset property="versionMajor" />
			<isset property="versionMinor" />
		</and>
	</condition>
	<property name="minor" value="" />

	<condition property="micro" value=".${versionMicro}">
		<and>
			<isset property="versionMinor" />
			<isset property="versionMicro" />
		</and>
	</condition>
	<property name="micro" value="" />

	<property name="scoutVersion" value="${major}${minor}${micro}" />

	<condition property="conditionSkipClean">
		<istrue value="${skipClean}" />
	</condition>

	<condition property="conditionCheckStaged">
		<and>
			<available file="${scoutDownloadLocation}/${stagingAreaFolder}/doStage" />
			<isfalse value="${skipUpload}" />
			<isfalse value="${testBuild}" />
		</and>
	</condition>

	<target name="build">
		<!-- prepare junit test report folders -->
		<delete dir="${testReportsDir}" failonerror="false" />
		<mkdir dir="${testReportsDir}"/>

		<!-- run test builds -->
		<antcall target="precheck" />
		<for list="3.8,3.6,3.7,4.2" param="version">
			<sequential>
				<propertycopy name="skipValidateBuildVersion" from="@{version}_skipValidateBuild" />
				<if><equals arg1="${skipValidateBuildVersion}" arg2="true" /><then></then>
			 		<else>
			 			<antcall target="buildVersion">
							<param name="eclipsePlatformVersion" value="@{version}" />
						</antcall>
			 		</else>
				</if>
			</sequential>
		</for>

		<!-- run final build -->
		<property name="doFinalBuild" value="true" />
		<antcall target="buildVersion">
			<param name="eclipsePlatformVersion" value="${finalBuildVersion}" />
		</antcall>
	</target>

	<!-- expects property "eclipsePlatformVersion" -->
	<target name="buildVersion" depends="clean">
		<echo message="BUILD USING ECLIPSE VERSION ${eclipsePlatformVersion}" />
		<propertycopy name="eclipseFileName" from="${eclipsePlatformVersion}_eclipseFileName" />
		<propertycopy name="eclipseDownloadUrl" from="${eclipsePlatformVersion}_eclipseDownloadUrl" />
		<propertycopy name="eclipseDeltapackName" from="${eclipsePlatformVersion}_eclipseDeltapackName" />
		<propertycopy name="eclipseDeltapackUrl" from="${eclipsePlatformVersion}_eclipseDeltapackUrl" />
		<propertycopy name="pdeBuildPluginVersion" from="${eclipsePlatformVersion}_pdeBuildPluginVersion" />
		<propertycopy name="equinoxLauncherPluginVersion" from="${eclipsePlatformVersion}_equinoxLauncherPluginVersion" />
		<propertycopy name="orbitDownloadPluginList" from="${eclipsePlatformVersion}_orbitDownloadPluginList" />
		<propertycopy name="orbitDropUrl" from="${eclipsePlatformVersion}_orbitDropUrl" />
		<propertycopy name="eclipseTestFrameworkName" from="${eclipsePlatformVersion}_eclipseTestFrameworkName" />
		<propertycopy name="eclipseTestFrameworkUrl" from="${eclipsePlatformVersion}_eclipseTestFrameworkUrl" />
		<propertycopy name="eclipseTestFrameworkSubFolder" from="${eclipsePlatformVersion}_eclipseTestFrameworkSubFolder" />

		<antcall target="setupEclipse" />
		<ant antfile="${buildFileDir}/step020_buildFeatures.xml" target="build" />
		<antcall target="finalBuild" />
	</target>

	<target name="finalBuild" if="doFinalBuild">
		<ant antfile="${buildFileDir}/step010_downloadRepository.xml" target="build" />
		<ant antfile="${buildFileDir}/step030_archiveAll.xml" target="build" />
		<ant antfile="${buildFileDir}/step050_pack200Normalize.xml" target="build" />
		<ant antfile="${buildFileDir}/step060_sign.xml" target="build" />
		<ant antfile="${buildFileDir}/step100_zipUnpack.xml" target="build" />
		<ant antfile="${buildFileDir}/step110_zipCreate.xml" target="build" />
		<ant antfile="${buildFileDir}/step200_p2Pack200.xml" target="build" />
		<ant antfile="${buildFileDir}/step210_p2mergeRepository.xml" target="build" />
		<ant antfile="${buildFileDir}/step220_p2metadata.xml" target="build" />
		<ant antfile="${buildFileDir}/step230_p2categorize.xml" target="build" />
		<ant antfile="${buildFileDir}/upload.xml" target="build" />
		<antcall target="clean"/>
	</target>


	<target name="clean" unless="conditionSkipClean">
		<echo message="clean working dir" />
		<delete dir="${relengRootDir}/working" />
	</target>

	<target name="precheck" depends="checkStaged">
	</target>

	<target name="checkStaged" if="conditionCheckStaged">
		<fail message="already staged. Ensure the staged build is applied to the repository!" />
	</target>

	<target name="setupEclipse" unless="skipInstallEclipse">
		<mkdir dir="${relengRootDir}/working" />
		<ant antfile="${buildFileDir}/setupEclipse.xml" target="setupEclipse" />
	</target>
</project>