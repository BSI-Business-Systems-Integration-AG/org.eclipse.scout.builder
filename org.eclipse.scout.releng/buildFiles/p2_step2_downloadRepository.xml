<!--
   Copyright (c) 2010 BSI Business Systems Integration AG.
   All rights reserved. This program and the accompanying materials
   are made available under the terms of the Eclipse Public License v1.0
   which accompanies this distribution, and is available at
   http://www.eclipse.org/legal/epl-v10.html
   
   Contributors:
       BSI Business Systems Integration AG - initial API and implementation
 -->
<!--
 Input
  ${buildWorking}/step0 to have the subfolders /plugins /features with all bundle/feature sources in it.
 
 Output
  ${buildWorking}/step1 with two subfolders /plugins /features an all the built bundles and features 
     packed in jar files if requested.
     
     $JAVA_HOME/bin/java \
    	-Dorg.eclipse.update.jarprocessor.pack200=@jre \
    	-cp "$ECLIPSE_LAUNCHER" org.eclipse.core.launcher.Main \
    	-application org.eclipse.update.core.siteOptimizer \
    	-jarProcessor -processAll -repack -outputDir .packed "$srcFile"  
-->

<project name="p2_step2.downlaodRepository" default="build">
	<property file="build.properties" />

	<taskdef name="custom.createUndoScript" classname="org.eclipse.scout.releng.ant.undo.CreateUndoScript" />
	<taskdef name="custom.trunkateReposiory" classname="org.eclipse.scout.releng.ant.p2.TrunkateRepository" />


	<target name="clean">
		<delete dir="${buildDataDir}/p2_step2" />
	</target>

	<target name="build">

		<condition property="nightly">
			<equals arg1="N" arg2="${buildType}" />
		</condition>

		<condition property="scoutRepositoryLocation" value="${scoutDownloadLocation}/nightly/update">
			<equals arg1="N" arg2="${buildType}" />
		</condition>
		<condition property="scoutRepositoryLocation" value="${scoutDownloadLocation}/${versionMajor}.${versionMinor}/update">
			<or>
				<equals arg1="R" arg2="${buildType}" />
				<equals arg1="S" arg2="${buildType}" />
			</or>
		</condition>

		<condition property="conditionSkipDownloadRepository">
			<or>
				<not>
					<available file="${scoutRepositoryLocation}" />
				</not>
				<istrue value="${skipDownloadRepository}" />
			</or>
		</condition>
		<available file="${buildDataDir}/p2_step2/output/setupRepository.created" property="skipP2_step2" />
		<antcall target="setupRepository" />
	</target>

	<target name="setupRepository" unless="skipP2_step2">
		<antcall target="clean" />
		<mkdir dir="${buildDataDir}/p2_step2/output" />
		<antcall target="localRepo" />
		<antcall target="createUndoScript" />
		<antcall target="downlaodRepository" />
		<touch file="${buildDataDir}/p2_step2/output/setupRepository.created" />
		<delete dir="${buildDataDir}/p2_step2/input" failonerror="false" />
	</target>

	<target name="localRepo">
		<property name="outputFolder" location="${buildDataDir}/p2_step2/output" />
		<copy todir="${outputFolder}">
			<fileset dir="${buildDataDir}/p2_step1/output/rtFeature">
				<include name="**/*" />
				<exclude name="*.created" />
			</fileset>
			<fileset dir="${buildDataDir}/p2_step1/output/sdkFeature">
				<include name="**/*" />
				<exclude name="*.created" />
			</fileset>
		</copy>
	</target>

	<target name="createUndoScript">
		<custom.createUndoScript undoScript="${buildDataDir}/p2_step2/output/undo-${scoutVersion}${versionMilestone}-${buildTimestamp}.sh">
			<dirset dir="${buildDataDir}/p2_step2/output">
				<include name="plugins" />
				<include name="features" />
			</dirset>
		</custom.createUndoScript>
		<chmod perm="775" file="${buildDataDir}/p2_step2/output/undo-${scoutVersion}${versionMilestone}-${buildTimestamp}.sh" failonerror="false" />
	</target>


	<target name="downlaodRepository" unless="conditionSkipDownloadRepository">
		<echo message="downloadRepository doit"></echo>
		<!-- download -->
		<copy todir="${buildDataDir}/p2_step2/output">
			<fileset dir="${scoutRepositoryLocation}">
				<include name="**/**" />
				<exclude name="content.jar" />
				<exclude name="artifacts.jar" />
			</fileset>
		</copy>
	</target>

	<target name="trunkateRepository" if="nightly">
		<custom.trunkateReposiory repositoryLocation="${scoutRepositoryLocation}" keep="3" />
	</target>
</project>
